{"version":3,"sources":["Context.js","components/Header.js","components/CartItem.js","pages/Cart.js","components/Image.js","pages/Photos.js","utils/index.js","pages/Favourites.js","App.js","serviceWorker.js","index.js"],"names":["PicContext","React","createContext","PicProvider","props","useState","ImgArr","setImgArr","cartItems","setCart","useEffect","fetch","then","res","json","data","Provider","value","toggleFavourite","id","newArr","map","x","isFavorite","console","log","addImgtoCart","img","prevState","removeItem","prevItem","filter","emptyCart","children","Header","useContext","to","className","length","CartItem","onClick","item","src","url","width","Cart","cartItemElements","key","totalCostDisplay","toLocaleString","style","currency","ordering","setOrdering","setTimeout","alert","Image","hovered","setHovered","onMouseEnter","onMouseLeave","some","Photos","Images","index","i","Favourites","ImgArr2","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"mPAGMA,EAAaC,IAAMC,gBAIzB,SAASC,EAAYC,GAAQ,IAAD,EAEGC,mBAAS,IAFZ,mBAEjBC,EAFiB,KAEVC,EAFU,OAGKF,mBAAS,IAHd,mBAGjBG,EAHiB,KAGNC,EAHM,KA0E5B,OAnEIC,qBAAU,WAETC,MAAM,gGACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIR,EAAUQ,QAIvB,IA6DN,kBAACf,EAAWgB,SAAZ,CAAqBC,MAAO,CAACX,SAAQY,gBA1DjC,SAAyBC,GAItB,IAAMC,EAASd,EAAOe,KAAI,SAAAC,GACrB,OAAIH,IAAOG,EAAEH,GAEF,2BACAG,GADP,IAEIC,YAAaD,EAAEC,aAKhBD,KAOXf,EAAUa,GAEVI,QAAQC,IAAInB,IAmCiCoB,aA/BjD,SAAsBC,GAOtB,OAAOlB,GAAQ,SAAAmB,GAAS,4BAAQA,GAAR,CAAkBD,QAwBoBnB,YAAWqB,WAlBzE,SAAoBF,GAEpBlB,GAAQ,SAAAqB,GAAQ,OAAIA,EAASC,QAAO,SAAAT,GAAC,OAAIA,EAAEH,IAAMQ,EAAIR,UAgBgCa,UATzF,WAEAvB,EAAQ,OAQPL,EAAM6B,UCxDQC,MAtBf,WAAmB,IAEZ1B,EAAa2B,qBAAWnC,GAAxBQ,UAGP,OAEA,gCACU,kBAAC,IAAD,CAAM4B,GAAG,WAAT,MAAsB,wCAAtB,KACA,kBAAC,IAAD,CAAMA,GAAG,sBAAT,IAA+B,6CAA/B,KACA,kBAAC,IAAD,CAAMA,GAAK,gBAAgB,uBAAGC,UAC7B7B,EAAU8B,OAAQ,EAAG,oCAAoC,yCCArDC,MAbf,SAAkBnC,GAAQ,IAEfyB,EAAcM,qBAAWnC,GAAzB6B,WAEP,OACI,yBAAKQ,UAAU,aACX,uBAAGA,UAAU,qBAAqBG,QAAU,kBAAMX,EAAWzB,EAAMqC,SACnE,yBAAKC,IAAKtC,EAAMqC,KAAKE,IAAKC,MAAM,UAChC,sCCgCGC,MAvCf,WAAiB,IAAD,EACmBV,qBAAWnC,GAAnCQ,EADK,EACLA,UAAWwB,EADN,EACMA,UACZc,EAAmBtC,EAAUa,KAAI,SAAAoB,GAAI,OACvC,kBAAC,EAAD,CAAUM,IAAKN,EAAKtB,GAAIsB,KAAMA,OAI5BO,GADY,KAAOxC,EAAU8B,QACAW,eAAe,QAAS,CAACC,MAAO,WAAYC,SAAU,QAP7E,EASmB9C,mBAAS,eAT5B,mBASL+C,EATK,KASIC,EATJ,KA2BZ,OACI,0BAAMhB,UAAU,aACZ,yCACCS,EACD,uBAAGT,UAAU,cAAb,UAAkCW,EAAlC,KACA,yBAAKX,UAAU,gBACX,4BAAQG,QAtBxB,WAEIa,EAAY,eAEZC,YAAW,WAEXC,MAAM,8BACNF,EAAY,eACZrB,MACG,KAGPR,QAAQC,IAAIjB,KAU+B4C,MCuB5BI,MA1Df,SAAepD,GAAQ,IAAD,EAEYC,oBAAS,GAFrB,mBAEXoD,EAFW,KAEFC,EAFE,OAG4CvB,qBAAWnC,GAAlEkB,EAHW,EAGXA,gBAAiBQ,EAHN,EAGMA,aAAalB,EAHnB,EAGmBA,UAAWqB,EAH9B,EAG8BA,WA2ChD,OACI,yBAAKQ,UAAS,UAAKjC,EAAMiC,UAAX,oBAAwCsB,aAAc,kBAAMD,GAAW,IACrFE,aAAc,kBAAMF,GAAW,KAC3B,yBAAKhB,IAAKtC,EAAMuB,IAAIgB,IAAKN,UAAU,eAlBvCjC,EAAMuB,IAAIJ,WAEH,uBAAGc,UAAU,yBAAyBG,QAAW,kBAAMtB,EAAgBd,EAAMuB,IAAIR,OAInFsC,EAGE,uBAAGpB,UAAU,yBAAyBG,QAAW,kBAAMtB,EAAgBd,EAAMuB,IAAIR,YAHvF,EA9BgBX,EAAUqD,MAAK,SAAAvC,GAAC,OAAIA,EAAEH,KAAOf,EAAMuB,IAAIR,MAI7C,uBAAGkB,UAAU,6BAA6BG,QAAS,kBAAMX,EAAWzB,EAAMuB,QAK5E8B,EAGE,uBAAGpB,UAAU,0BAA0BG,QAAS,kBAAMd,EAAatB,EAAMuB,aAH/E,ICGEmC,MAjBf,WAAmB,IAMbC,EAJW5B,qBAAWnC,GAArBM,OAIee,KAAK,SAACC,EAAE0C,GAAH,OACvB,kBAAC,EAAD,CAAOjB,IAAKzB,EAAEH,GAAIQ,IAAKL,EAAGe,WCZL4B,EDYyBD,ECX1CC,EAAI,IAAM,EACH,MAEFA,EAAI,IAAM,EACR,YADN,KAJF,IAAkBA,KDerB,OACI,0BAAM5B,UAAU,UACX0B,IE4BEG,MAxCf,WAAuB,IAKdC,EAHUhC,qBAAWnC,GAArBM,OAGiByB,QAAO,SAAAT,GAE7B,IAAqB,IAAjBA,EAAEC,WAEJ,OAAOD,KAOVE,QAAQC,IAAI0C,GAGZ,IAAMJ,EAASI,EAAQ9C,KAAK,SAACC,EAAE0C,GAAH,OAC3B,kBAAC,EAAD,CAAOjB,IAAKzB,EAAEH,GAAIQ,IAAKL,OAEvB,OACJ,6BACQ,8CAGCyC,ICFMK,MApBf,WACE,OAGE,6BACE,kBAAC,EAAD,MAIA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOC,KAAK,WAAZ,IAAuB,kBAAC,EAAD,OACvB,kBAAC,IAAD,CAAOA,KAAM,gBAAb,IAA6B,kBAAC,EAAD,OAC7B,kBAAC,IAAD,CAAOA,KAAK,sBAAqB,kBAAC,EAAD,UCVnBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAACzE,EAAD,KACA,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGF0E,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrE,MAAK,SAAAsE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7D,QAAQ6D,MAAMA,EAAMC,c","file":"static/js/main.333aa82a.chunk.js","sourcesContent":["import React,{useState,useEffect} from \"react\"\r\nimport { checkPropTypes } from \"prop-types\"\r\n\r\nconst PicContext = React.createContext()\r\n\r\n\r\n\r\nfunction PicProvider(props) {\r\n\r\n    const [ImgArr,setImgArr] = useState([]) \r\n    const [cartItems, setCart] = useState([])\r\n  \r\n\r\n\r\n    useEffect(() => {\r\n        \r\n     fetch(\"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\")\r\n     .then(res => res.json())\r\n     .then(data => setImgArr(data)  )\r\n        \r\n    \r\n    \r\n    },[])\r\n\r\n\r\n    function toggleFavourite(id) {\r\n\r\n\r\n        // const {name} = e.target;\r\n       const newArr = ImgArr.map(x => {\r\n            if (id === x.id) {\r\n              \r\n                return {\r\n                    ...x, \r\n                    isFavorite: !x.isFavorite\r\n                }\r\n\r\n            }\r\n\r\n            return x\r\n\r\n\r\n        })\r\n\r\n        //  localStorage.setItem(\"favs\", JSON.stringify(newArr));\r\n         ;\r\n        setImgArr(newArr)\r\n\r\n        console.log(ImgArr)\r\n\r\n    }\r\n\r\n    function addImgtoCart(img) {\r\n\r\n    //  return setCart([...img,img])\r\n\r\n\r\n\r\n\r\n    return setCart(prevState => [...prevState,img])\r\n\r\n\r\n\r\n    }\r\n\r\n    function removeItem(img) {\r\n\r\n    setCart(prevItem => prevItem.filter(x => x.id != img.id) )\r\n\r\n    }\r\n\r\n    // console.log(cartItems)\r\n\r\n\r\nfunction emptyCart() {\r\n\r\nsetCart([])\r\n\r\n\r\n}\r\n\r\nreturn (\r\n\r\n<PicContext.Provider value={{ImgArr, toggleFavourite,addImgtoCart,cartItems, removeItem, emptyCart}}>\r\n{props.children}\r\n\r\n\r\n</PicContext.Provider>\r\n\r\n\r\n)\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport {PicProvider, PicContext}","import React,{useContext} from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {PicContext} from \"../Context\"\r\n\r\n\r\n\r\nfunction Header() {\r\n\r\nconst {cartItems} = useContext(PicContext)\r\n\r\n\r\nreturn (\r\n\r\n<header>\r\n          <Link to=\"/picsum\">   <h2>Pic Some</h2> </Link>\r\n          <Link to=\"/picsum/favourites\"> <h2>My Favourites</h2> </Link> \r\n          <Link to = \"/picsum/cart\" ><i className=\r\n          {cartItems.length >0? \"ri-shopping-cart-fill ri-fw ri-2x\":\"ri-shopping-cart-line ri-fw ri-2x\"}></i>\r\n          </Link>\r\n          \r\n</header>\r\n\r\n)\r\n\r\n\r\n}\r\n\r\n\r\nexport default Header","import React,{useState, useContext} from \"react\"\r\nimport {PicContext} from \"../Context\"\r\n\r\n\r\nfunction CartItem(props) {\r\n\r\n    const {removeItem} = useContext(PicContext)\r\n\r\n    return (\r\n        <div className=\"cart-item\">\r\n            <i className=\"ri-delete-bin-line\" onClick ={() => removeItem(props.item)}></i>\r\n            <img src={props.item.url} width=\"130px\"/>\r\n            <p>$5.99</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem","import React, {useContext, useState} from \"react\"\r\nimport {PicContext} from \"../Context\"\r\nimport CartItem from \"../components/CartItem\"\r\n\r\n\r\nfunction Cart() {\r\n    const {cartItems, emptyCart} = useContext(PicContext)\r\n    const cartItemElements = cartItems.map(item => (\r\n        <CartItem key={item.id} item={item} />\r\n    ))\r\n\r\n    const totalCost = 5.99 * cartItems.length\r\n    const totalCostDisplay = totalCost.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})\r\n\r\n    const [ordering,setOrdering] = useState(\"Place order\")\r\n    \r\nfunction Order() {\r\n\r\n    setOrdering(\"Ordering...\")\r\n\r\n    setTimeout(() => {\r\n    \r\n    alert(\"Your order has been placed\")\r\n    setOrdering(\"Place order\")\r\n    emptyCart()\r\n    }, 3000)\r\n    \r\n\r\nconsole.log(cartItems)\r\n\r\n}\r\n\r\n    return (\r\n        <main className=\"cart-page\">\r\n            <h1>Check out</h1>\r\n            {cartItemElements}\r\n            <p className=\"total-cost\">Total: {totalCostDisplay} </p>\r\n            <div className=\"order-button\">\r\n                <button onClick ={ Order}>{ordering}</button>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Cart","import React,{useState,useContext} from \"react\"\r\nimport {PicContext} from \"../Context\"\r\n\r\nfunction Image(props) {\r\n\r\n    const [hovered, setHovered] = useState(false)\r\n    const {toggleFavourite, addImgtoCart,cartItems, removeItem} = useContext(PicContext)\r\n\r\n    function CartImg() {\r\n\r\n        const boolCart = cartItems.some(x => x.id === props.img.id)\r\n\r\n        if (boolCart) {\r\n\r\n            return <i className=\"ri-shopping-cart-fill cart\" onClick={() => removeItem(props.img)}></i>\r\n\r\n        }\r\n\r\n\r\n        else if (hovered) {\r\n\r\n\r\n            return <i className=\"ri-add-circle-line cart\" onClick={() => addImgtoCart(props.img) } ></i>\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    function heartImg() {\r\n\r\n    if (props.img.isFavorite) {\r\n\r\n        return <i className=\"ri-heart-fill favorite\" onClick = {() => toggleFavourite(props.img.id)}></i>\r\n\r\n    }\r\n\r\n    else if (hovered) {\r\n\r\n\r\n        return <i className=\"ri-heart-line favorite\" onClick = {() => toggleFavourite(props.img.id)} ></i>\r\n    }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={`${props.className} image-container`} onMouseEnter={() => setHovered(true)}  \r\n        onMouseLeave={() => setHovered(false)}  >\r\n            <img src={props.img.url} className=\"image-grid\"/>\r\n            {heartImg()}\r\n            {CartImg()}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image    \r\n\r\n{/* <i className=\"ri-heart-fill favorite\"></i> */}","import React,{useContext} from \"react\"\r\nimport {PicContext} from \"../Context\"\r\nimport Image from \"../components/Image\"\r\nimport {getClass} from \"../utils/index.js\"\r\n\r\nfunction Photos() {\r\n\r\nconst {ImgArr} = useContext(PicContext)\r\n\r\n// const ImgArr2 = JSON.parse(localStorage.getItem(\"favs\"));\r\n// JSON.parse(localStorage.getItem(\"favs\"));\r\nconst Images = ImgArr.map( (x,index) => ( \r\n    <Image key={x.id} img={x} className={getClass(index)} /> ))\r\n\r\n\r\n    return (\r\n        <main className=\"photos\">\r\n            {Images}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Photos","export function getClass(i) {\r\n    if (i % 5 === 0) {\r\n        return 'big';\r\n    }\r\n    else if (i % 6 === 0) {\r\n        return 'wide'\r\n    }\r\n}","import React,{useState, useContext} from \"react\"\r\nimport Image from \"../components/Image\"\r\nimport {getClass} from \"../utils/index.js\"\r\nimport {PicContext} from \"../Context\"\r\n\r\nfunction Favourites() {\r\n\r\n  const {ImgArr} = useContext(PicContext)\r\n    // const ImgArr = JSON.parse(localStorage.getItem(\"favs\"));\r\n\r\n   const ImgArr2 = ImgArr.filter(x => {\r\n\r\n    if (x.isFavorite === true) {\r\n\r\n      return x;\r\n\r\n    }\r\n\r\n\r\n   })\r\n\r\n   console.log(ImgArr2);\r\n\r\n\r\n   const Images = ImgArr2.map( (x,index) => ( \r\n    <Image key={x.id} img={x}  /> ))\r\n\r\n    return (\r\n<div>\r\n        <h1> My Favourites</h1>\r\n\r\n    \r\n        {Images}\r\n    \r\n\r\n</div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Favourites","import React from 'react';\nimport {Link, Switch, Route} from \"react-router-dom\"\nimport Header from \"./components/Header\"\nimport Cart from \"./pages/Cart\"\nimport Photos from \"./pages/Photos\"\nimport Favourites from \"./pages/Favourites\"\n\n\n\n\nfunction App() {\n  return (\n\n\n    <div>\n      <Header />\n    \n     \n        \n      <Switch>\n      <Route path=\"/picsum\"> <Photos /></Route>\n      <Route path =\"/picsum/cart\"> <Cart /></Route>\n      <Route path=\"/picsum/favourites\"><Favourites /></Route>\n\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\"\n\nimport {PicProvider} from \"./Context\"\n \nReactDOM.render(\n  <PicProvider>\n  <Router> \n    <App />\n  </Router>\n  </PicProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}